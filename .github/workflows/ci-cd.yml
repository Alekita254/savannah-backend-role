name: Django CI/CD Pipeline

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

env:
  DOCKER_IMAGE: ghcr.io/alekita254/savannah-backend
  KUBE_NAMESPACE: savannah-prod

jobs:
  test:
    runs-on: ubuntu-latest
    services:
      postgres:
        image: postgres:13
        env:
          POSTGRES_PASSWORD: postgres
        ports:
          - 5432:5432
      redis:
        image: redis:6
        ports:
          - 6379:6379

    steps:
    - uses: actions/checkout@v4

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.9'

    - name: Install dependencies
      run: |
        pip install -r requirements.txt
        pip install pytest pytest-cov

    - name: Run tests
      run: |
        pytest --cov=. --cov-report=xml

    - name: Upload coverage
      uses: codecov/codecov-action@v3

  build-and-push:
    needs: test
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4

    - name: Login to GitHub Container Registry
      uses: docker/login-action@v2
      with:
        registry: ghcr.io
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}

    - name: Build and push
      run: |
        docker build -t $DOCKER_IMAGE:${{ github.sha }} .
        docker push $DOCKER_IMAGE:${{ github.sha }}
        docker tag $DOCKER_IMAGE:${{ github.sha }} $DOCKER_IMAGE:latest
        docker push $DOCKER_IMAGE:latest

  deploy:
    needs: build-and-push
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4

    - name: Install kubectl
      uses: azure/setup-kubectl@v3

    - name: Deploy to Kubernetes
      run: |
        # For development (Minikube)
        if [ "${{ github.ref }}" == "refs/heads/main" ]; then
          echo "Deploying to production..."
          echo "${{ secrets.PROD_KUBE_CONFIG }}" > kubeconfig.yaml
          export KUBECONFIG=kubeconfig.yaml
        else
          echo "Deploying to staging..."
          minikube start --driver=docker
          kubectl config use-context minikube
        fi

        # Apply Kubernetes manifests
        kubectl apply -f k8s/
        
        # Run migrations
        kubectl create job django-migrate --from=cronjob/django-migrate-cron
      env:
        DOCKER_IMAGE: ghcr.io/alekita254/savannah-backend
